/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frame;
import Modify.FilmModify;
import Module.Film;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author This PC
 */
public class QLyPhimFrame extends javax.swing.JFrame {
    
    DefaultTableModel tableModel;
    List<Film> FilmList = new ArrayList<>();
    /**
     * Creates new form QLyPhimFrame
     */
    private static int vitri = 0;
    
    public QLyPhimFrame() {
        initComponents();
        tableModel = (DefaultTableModel) tblFilm.getModel();
        showFilm();
    }
    
    private void showFilm() {
        List<Film> FilmList = FilmModify.findAll();

        DefaultTableModel model = (DefaultTableModel) this.tblFilm.getModel();
        model.setNumRows(0);
        //tableModel.setRowCount(0);

        for(Film film:FilmList) {
            model.addRow(new Object[]{film.getMaPhim(), film.getTenPhim(),
                film.getDongPhim(), film.getTheLoai(), film.getDanhGia()});
        }
        
        this.tblFilm.setRowHeight(24);
    }
    
    public void showInfo() {
    if (vitri >= 0 && vitri < tableModel.getRowCount()) {
        String maphim = (String) tableModel.getValueAt(vitri, 0); 
        String tenphim = (String) tableModel.getValueAt(vitri, 1); 
        String dongphim = (String) tableModel.getValueAt(vitri, 2); 
        String theloai = (String) tableModel.getValueAt(vitri, 3); 
        Double danhgia = (Double) tableModel.getValueAt(vitri, 4); 

 
        txtMaPhim.setText(String.valueOf(maphim));
        txtTenPhim.setText(tenphim);
        CBDongPhim.setSelectedItem(dongphim);
        CBTheLoai.setSelectedItem(theloai);
        if(danhgia==0.0)
        {
            JOptionPane.showConfirmDialog(this,"Phim này hiện chưa có đánh giá","Times News Roman",JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            JOptionPane.showConfirmDialog(this,"Phim này được đánh giá với "+danhgia+" điểm","Times News Roman",JOptionPane.INFORMATION_MESSAGE);
        }
    } else {
    
        txtMaPhim.setText("");
        txtTenPhim.setText("");
        CBDongPhim.setSelectedIndex(0);
        CBTheLoai.setSelectedIndex(0); 
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaPhim = new javax.swing.JTextField();
        txtTenPhim = new javax.swing.JTextField();
        CBTheLoai = new javax.swing.JComboBox<>();
        CBDongPhim = new javax.swing.JComboBox<>();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Find = new javax.swing.JButton();
        Rate = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFilm = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Thể Loại:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 80, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã Phim:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên Phim:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 70, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Dòng Phim:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 80, -1));
        getContentPane().add(txtMaPhim, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 220, 30));
        getContentPane().add(txtTenPhim, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 220, 30));

        CBTheLoai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CBTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kinh Dị", "Tình Cảm", "Hành Động", "Khoa Học-Viễn Tưởng", "Hài", "Cổ Trang", "Tâm Lý ", "Tài Liệu", "TV Show", "Thần Thoại-Sử Thi", "Hoạt Hình" }));
        getContentPane().add(CBTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 160, 30));

        CBDongPhim.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CBDongPhim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phim Bộ", "Phim Lẻ" }));
        getContentPane().add(CBDongPhim, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 182, 90, 30));

        Add.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Virtuallnk-Web-Save.16.png"))); // NOI18N
        Add.setText("Thêm");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 120, 30));

        Edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Famfamfam-Silk-Monitor-edit.16.png"))); // NOI18N
        Edit.setText("Sửa");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        getContentPane().add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 120, 30));

        Delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Led24.de-Led-Cross.16.png"))); // NOI18N
        Delete.setText("Xóa");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 120, 30));

        Find.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Find.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Led24.de-Led-Find.16.png"))); // NOI18N
        Find.setText("Tìm Kiếm");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });
        getContentPane().add(Find, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 120, 30));

        Rate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Rate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Yusuke-Kamiyamane-Fugue-Sort-rating.16.png"))); // NOI18N
        Rate.setText("Đánh Giá");
        Rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RateActionPerformed(evt);
            }
        });
        getContentPane().add(Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 120, 30));

        Reset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Led24.de-Led-Arrow-redo.16.png"))); // NOI18N
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });
        getContentPane().add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, 120, 30));

        tblFilm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Phim", "Tên Phim", "Dòng Phim", "Thể Loại", "Đánh Giá"
            }
        ));
        tblFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFilmMouseClicked(evt);
            }
        });
        tblFilm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblFilmKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblFilm);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, 480));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/MainFrameBG.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblFilmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblFilmKeyReleased
        // TODO add your handling code here:
        vitri = this.tblFilm.getSelectedRow();
        this.showInfo();
    }//GEN-LAST:event_tblFilmKeyReleased

    private void tblFilmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFilmMouseClicked
        // TODO add your handling code here:
        vitri = this.tblFilm.getSelectedRow();
        this.showInfo();
    }//GEN-LAST:event_tblFilmMouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        String maphim = txtMaPhim.getText();
        String tenphim = txtTenPhim.getText();
        String dongphim = CBDongPhim.getSelectedItem().toString();
        String theloai = CBTheLoai.getSelectedItem().toString();
        if(maphim.length()==7 && !"".equals(tenphim))
        {
            Film tmp = new Film(maphim, tenphim, dongphim, theloai, null);
            FilmModify.insert(tmp);
            txtMaPhim.setText("");
            txtTenPhim.setText("");
            CBDongPhim.setSelectedIndex(0);
            CBTheLoai.setSelectedIndex(0); 
            showFilm();
        }
        else if(maphim.length()==7 && "".equals(tenphim))
        {
            JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại tên phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
            txtTenPhim.setText("");
        }
        else if(maphim.length()!=7 && !"".equals(tenphim))
        {
            JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại mã phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
            txtMaPhim.setText("");      
        }
        else
        {
            JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại tên phim và mã phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
            txtMaPhim.setText("");
            txtTenPhim.setText("");
        }
    }//GEN-LAST:event_AddActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tblFilm.getSelectedRow();
        if (selectedIndex != -1) {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật thông tin không?");
            System.out.println("option : " + option);
            int modelIndex = tblFilm.convertRowIndexToModel(selectedIndex);
            if (option == JOptionPane.YES_OPTION) {
                String maphim = txtMaPhim.getText();
                String tenphim = txtTenPhim.getText();
                String dongphim = CBDongPhim.getSelectedItem().toString();
                String theloai = CBTheLoai.getSelectedItem().toString();
                Double danhgia = (Double) tableModel.getValueAt(vitri, 4); 
                if(maphim.length()==7 && !"".equals(tenphim))
                {
                    Film tmp = new Film(maphim, tenphim, dongphim, theloai, danhgia);
                    FilmModify.update(tmp);
                    txtMaPhim.setText("");
                    txtTenPhim.setText("");
                    CBDongPhim.setSelectedIndex(0);
                    CBTheLoai.setSelectedIndex(0); 
                    showFilm();
                }
                else if(maphim.length()==7 && "".equals(tenphim))
                {
                    JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại tên phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
                    txtTenPhim.setText("");
                } 
                else if(maphim.length()!=7 && !"".equals(tenphim))
                {
                    JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại mã phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
                    txtMaPhim.setText("");      
                }
                else
                {
                    JOptionPane.showConfirmDialog(this,"Vui lòng nhập lại tên phim và mã phim!","Times New Roman",JOptionPane.ERROR_MESSAGE);
                    txtMaPhim.setText("");
                    txtTenPhim.setText("");
                }
            }
            else {
                JOptionPane.showMessageDialog(this,"Chọn phim cần thay đổi thông tin");
            }
        }
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tblFilm.getSelectedRow();
        if (selectedIndex != -1) {

            
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
            System.out.println("option : " + option);
            int modelIndex = tblFilm.convertRowIndexToModel(selectedIndex);
            if (option == JOptionPane.YES_OPTION) {
                String maphim = (String) tableModel.getValueAt(modelIndex, 0);
                FilmModify.delete(maphim);
                tableModel.removeRow(modelIndex);
                txtMaPhim.setText("");
                txtTenPhim.setText("");
                CBDongPhim.setSelectedItem("Phim Bộ");
                CBTheLoai.setSelectedItem("Kinh Dị");
                showFilm();  
            }
            else {
                JOptionPane.showMessageDialog(this,"Chọn phim cần xóa");
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void RateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RateActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tblFilm.getSelectedRow();
        if (selectedIndex != -1) {
            int option = JOptionPane.showConfirmDialog(this, "Tiếp tục thực hiện phản hồi?");
            System.out.println("option : " + option);
            int modelIndex = tblFilm.convertRowIndexToModel(selectedIndex);
            if (option == JOptionPane.YES_OPTION) {
                String maphim = (String) tableModel.getValueAt(vitri, 0); 
                String tenphim = (String) tableModel.getValueAt(vitri, 1); 
                String dongphim = (String) tableModel.getValueAt(vitri, 2); 
                String theloai = (String) tableModel.getValueAt(vitri, 3); 
                Double danhgia = (Double) tableModel.getValueAt(vitri, 4); 
                String ip = JOptionPane.showInputDialog(this, "Nhập đánh giá của bạn từ 0.0->5.0");
                Double rate = Double.parseDouble(ip);
                if(ip != null && rate>0.0 && rate<=5.0)
                {
                    Film tmp = new Film(maphim, tenphim, dongphim, theloai, rate);
                    FilmModify.update(tmp);
                    showFilm();
                }
                else
                {
                    showFilm();
                }  
            }
            else {
                JOptionPane.showMessageDialog(this,"Vui lòng chọn bộ phim mà bạn muốn gửi phản hồi");
            }
        }
    }//GEN-LAST:event_RateActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        txtMaPhim.setText("");
        txtTenPhim.setText("");
        CBDongPhim.setSelectedIndex(0);
        CBTheLoai.setSelectedIndex(0); 
    }//GEN-LAST:event_ResetActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        // TODO add your handling code here:
        String ip = JOptionPane.showInputDialog(this, "Menu Tìm Kiếm\n0.Tìm theo mã phim\n1.Tìm theo tên phim\n2.Tìm theo dòng phim\n3.Tìm theo thể loại phim");
        if(ip!=null && ip.length()>0)
        {
            int d = Integer.parseInt(ip);
            switch (d) {
                case 0:
                    {
                        String input = JOptionPane.showInputDialog(this, "Nhập mã phim cần tìm kiếm");
                        if(input != null && input.length() > 0) {
                            FilmList = FilmModify.findByMaPhim(input);
                            tableModel.setRowCount(0);
                            FilmList.forEach((film) -> {
                                tableModel.addRow(new Object[]{film.getMaPhim(), film.getTenPhim(),
                                    film.getDongPhim(), film.getTheLoai(), film.getDanhGia()});
                            });
                        }
                        else
                        {
                            showFilm();
                        }       
                        break;
                    }
                case 1:
                    {
                        String input = JOptionPane.showInputDialog(this, "Nhập tên phim cần tìm kiếm");
                        if(input != null && input.length() > 0) {
                            FilmList = FilmModify.findByTenPhim(input);
                            tableModel.setRowCount(0);
                            FilmList.forEach((film) -> {
                                tableModel.addRow(new Object[]{film.getMaPhim(), film.getTenPhim(),
                                    film.getDongPhim(), film.getTheLoai(), film.getDanhGia()});
                            });
                        }
                        else
                        {
                            showFilm();
                        }      
                        break;
                    }
                case 2:
                    {
                        String input = JOptionPane.showInputDialog(this, "Nhập dòng phim cần tìm kiếm");
                        if(input != null && input.length() > 0) {
                            {
                                FilmList = FilmModify.findByDongPhim(input);
                                tableModel.setRowCount(0);
                                 FilmList.forEach((film) -> {
                                tableModel.addRow(new Object[]{film.getMaPhim(), film.getTenPhim(),
                                    film.getDongPhim(), film.getTheLoai(), film.getDanhGia()});
                                });
                            }
                        }
                        else
                        {
                            showFilm();
                        }       
                        break;
                    }
                case 3:
                    {
                        String input = JOptionPane.showInputDialog(this, "Nhập thể loại phim cần tìm kiếm");
                        if(input != null && input.length() > 0) {
                            {
                                FilmList = FilmModify.findByTheLoai(input);
                                tableModel.setRowCount(0);
                                 FilmList.forEach((film) -> {
                                tableModel.addRow(new Object[]{film.getMaPhim(), film.getTenPhim(),
                                    film.getDongPhim(), film.getTheLoai(), film.getDanhGia()});
                                });
                            }
                        }
                        else
                        {
                            showFilm();
                        }       
                        break;
                    }
                default:
                    JOptionPane.showMessageDialog(this,"Nhập các giá trị từ 0->3","Time News Roman",JOptionPane.WARNING_MESSAGE);
                    showFilm();
                    break;
            }
        }
        else
        {
            showFilm();
        }
    }//GEN-LAST:event_FindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLyPhimFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLyPhimFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLyPhimFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLyPhimFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLyPhimFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JComboBox<String> CBDongPhim;
    private javax.swing.JComboBox<String> CBTheLoai;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Find;
    private javax.swing.JButton Rate;
    private javax.swing.JButton Reset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFilm;
    private javax.swing.JTextField txtMaPhim;
    private javax.swing.JTextField txtTenPhim;
    // End of variables declaration//GEN-END:variables
}
